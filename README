hwmodskel ist eine "Vorlage" zur praktischen Benutzung der Altera Tools unter Linux, fuer die LVA
"Hardware Modellierung VL"

Die Webedition von ModelSim-Altera und Quartus II koennen hier kostenlos bezogen werden:
> https://www.altera.com/support/software/download/altera_design/quartus_we/dnl-quartus_we.jsp


ein Makefile befindet sich in ~hwmodskel/src. Folgende Punkte sind zu beachten:

o vsim, vcom, usw. muessen in $PATH sein (ueberlichweise ist das
  /opt/altera9.1/modelsim_ase/linux/).

o quartus_map, quartus_asm, usw. muessen sich ebenfalls in $PATH befinden (ueberlichweise
  ist das /opt/altera9.1/quartus/bin/).

o die Dateinamen (ohne ".vhd") der Dateien die Packages enthalten muessen in PGKFILES angegeben
  werden (Reihenfolge beachten).

o die Dateinamen (ohne ".vhd") der Dateien die Architectures bzw. Entites enthalten muessen in
  SRCFILES angegeben werden (Reihenfolge beachten).

o bei PKGFILES und SRCFILES duerfen _keine_ Testbenches angegeben werden.

o eine beh-sim wird so aufgerufen: beh_$(FILE)
	- die Dateien beh_$(FILE)_tb.vhd und beh_$(FILE)_tb.do muessen existieren.
	- Instanzname der tb_entity muss immer "sim" sein.
	- Instanzname der instanzierten Komponente muss immer "inst" sein.

o eine post-sim wird aehnlich aufgerufen: post_$(FILE)
	- die Dateien post_$(FILE)_tb.vhd und post_$(FILE)_tb.do muessen existieren.
	- Instanzname der tb_entity muss immer "sim" sein.
	- Instanzname der instanzierten Komponente muss immer "inst" sein.

Beispiele:
$ make beh_foo
$ make post_foo
$ make clean #loescht alle erzeugten dateien


Tipps:
o wenn ModelSim schon gestartet ist bei der beh-sim, reicht auch ein "make" in ~hwmodskel/src und
  dann "restart -f" bzw. "rr" in ModelSim


TODOs:
o Testfaelle aus Files auslesen
o Coverage support
